# Python bytecode and compilation artifacts
# These files are generated by the Python interpreter for faster loading and execution.
# They are not part of your source code and should not be committed to version control.
__pycache__/
*.pyc
*.pyo
*.pyd

# Virtual environment directories
# Virtual environments create isolated Python environments to manage project dependencies.
# These directories contain all installed packages and are typically large, so they shouldn't be committed.
# Users can recreate their own environments using `requirements.txt`.
env/
venv/
.env/

# Distribution and build artifacts
# Files generated during the packaging and distribution of your Python project.
# These include compiled extensions, distribution archives, and build directories.
*.egg
*.egg-info/
dist/
build/
*.so
*.dll

# Log and temporary files
# Various temporary files or log outputs that might be generated during development or script execution.
*.log
*.tmp
*.swp
*.swo

# IDE-specific files (e.g., VS Code, PyCharm)
# Configuration files and folders created by Integrated Development Environments (IDEs)
# to store user-specific settings, project metadata, or temporary files.
# These are personal to the developer and not relevant to the project's source code.
.vscode/
.idea/

# Output file generated by the script
# This specific file (`found_wallets.txt`) is generated by your script and
# might contain sensitive information (like mnemonic phrases).
# It is crucial to prevent this file from being uploaded to a public GitHub repository.
found_wallets.txt

# Operating System files
# Hidden files automatically created by operating systems for various purposes (e.g., thumbnail caches, directory services).
# They are irrelevant to your project's code and should always be ignored.
.DS_Store # macOS directory services store
Thumbs.db # Windows thumbnail cache
